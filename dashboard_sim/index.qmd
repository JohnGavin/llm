---
title: "Monte Carlo Simulation: Normal Distribution"
format: 
  dashboard:
    orientation: columns
server: shiny
---

```{r}
#| context: setup
library(shiny)
library(tidyverse)
library(ggplot2)
```

# Simulation {.sidebar}

```{r}
numericInput("mean", "Mean:", value = 0)
numericInput("sd", "Standard Deviation:", value = 1, min = 0.1)
numericInput("sample_size", "Sample Size:", value = 1000, min = 100)
numericInput("bins", "Number of Bins:", value = 30, min = 10)
actionButton("run", "Run Simulation")
```

# Results

## Row {height=60%}

```{r}
#| context: server
output$histogram <- renderPlot({
  input$run  # Re-run when button is clicked
  
  sim_data <- tibble(
    value = rnorm(input$sample_size, mean = input$mean, sd = input$sd)
  )
  
  ggplot(sim_data, aes(x = value)) +
    geom_histogram(aes(y = ..density..), bins = input$bins, fill = "skyblue", color = "black") +
    geom_density(color = "red") +
    stat_function(
      fun = dnorm, 
      args = list(mean = input$mean, sd = input$sd),
      color = "blue", linetype = "dashed"
    ) +
    labs(
      title = "Monte Carlo Simulation of Normal Distribution",
      x = "Value",
      y = "Density"
    ) +
    theme_minimal()
})
```

```{r}
plotOutput("histogram")
```

## Row {height=40%}

```{r}
#| context: server
output$summary <- renderPrint({
  input$run  # Re-run when button is clicked
  
  sim_data <- tibble(
    value = rnorm(input$sample_size, mean = input$mean, sd = input$sd)
  )
  
  data_summary <- sim_data %>%
    summarise(
      sample_mean = mean(value),
      sample_sd = sd(value),
      within_1sd = mean(abs(value - input$mean) <= input$sd),
      within_2sd = mean(abs(value - input$mean) <= 2*input$sd),
      within_3sd = mean(abs(value - input$mean) <= 3*input$sd)
    )
  
  cat("Summary Statistics:\n")
  cat("Sample Mean:", data_summary$sample_mean, "\n")
  cat("Sample Standard Deviation:", data_summary$sample_sd, "\n")
  cat("\nEmpirical Rule Verification:\n")
  cat("% within 1 SD:", data_summary$within_1sd * 100, "%\n")
  cat("% within 2 SD:", data_summary$within_2sd * 100, "%\n")
  cat("% within 3 SD:", data_summary$within_3sd * 100, "%\n")
})
```

```{r}
verbatimTextOutput("summary")
```

# Instructions

## Overview

This dashboard presents a **Monte Carlo simulation** of a **normal distribution**. It allows you to interactively explore the properties of normal distributions, verify statistical concepts, and gain intuition about sampling and the law of large numbers.

## Key Concepts

1. **Normal Distribution**: A probability distribution that is symmetric about the mean, showing that data near the mean are more frequent than data far from the mean.

2. **Monte Carlo Simulation**: A statistical technique that uses repeated random sampling to obtain numerical results and understand the impact of randomness in a system.

3. **Empirical Rule**: Also known as the **68-95-99.7 rule**, it states that for a normal distribution:
   - About **68%** of the data falls within 1 standard deviation of the mean
   - About **95%** falls within 2 standard deviations
   - About **99.7%** falls within 3 standard deviations

## How to Use

1. Adjust the **input parameters** in the sidebar:
   - **Mean**: The center of the distribution
   - **Standard Deviation**: The spread of the distribution
   - **Sample Size**: The number of random samples to generate
   - **Number of Bins**: How many groups to divide the data into for the histogram

2. Click the **"Run Simulation"** button to generate new data and update the visualizations.

3. Observe the **histogram** and **density plot**:
   - The **blue bars** show the distribution of simulated data
   - The **red line** shows the density of the simulated data
   - The **blue dashed line** shows the theoretical normal distribution

4. Review the **summary statistics**:
   - Compare the **sample mean** and **standard deviation** to your input parameters
   - Check the **percentages** within 1, 2, and 3 standard deviations to verify the empirical rule

## Interpretation

- As you **increase the sample size**, the histogram should more closely approximate the theoretical normal distribution (blue dashed line).
- The **sample mean** and **standard deviation** should converge towards the input parameters as the sample size increases.
- The percentages within 1, 2, and 3 standard deviations should approach **68%, 95%, and 99.7%** respectively for large sample sizes.
- **Changing the mean** will shift the center of the distribution.
- **Adjusting the standard deviation** will affect the spread of the distribution.

By experimenting with different parameters, you can gain a deeper understanding of how sample size and distribution parameters affect the outcomes of random sampling from a normal distribution.
